// *******************************************************
//                     2-Deadwood.txt                     
// *******************************************************

// Script for Deadwood Canyon



// IMPORTS

var u = new MyScripts/Lib/Utilities
var uimkr = new MyScripts/Lib/UI_Maker
var p
p = import MyScripts/Lib/Performance
var a = new MyScripts/Lib/MyArsenal
var i = new MyScripts/Lib/MyBetterInfo
var c = new MyScripts/Lib/Combat

/***************************************************************/

var som = new MyScripts/Lib/Speed_O_Meter
var dpsm = new MyScripts/Lib/DPS_Meter_MODIFIED
var bosTmr
bosTmr = import MyScripts/Borrowed/BossfightTimer2

var somPanel = som.mkUI(0, 1, i.colToHex("red"), true, false)
?som.Update(false)
  somPanel.Recycle()
  somPanel = null

  somPanel = som.mkUI(0, 1, i.colToHex("red"), true, false)


dpsm.ENABLED = true
dpsm.refreshRate = 30

var dpsPanel
?dpsm.Update()
  ?dpsPanel
    dpsPanel.Recycle()
    dpsPanel = null

  dpsPanel = dpsm.mkUI(0, 3, "#yellow", 2)

/***************************************************************/



// VARIABLES

var keepMask = true
var smiteScr = 1

var dontDash = false
var debCount = 0

?p.ll
  keepMask = false
  dontDash = false
  debCount = 0

var canDebI
var canDebP
var canDebF



// FUNCTIONS:

func harvFunc(btn)
  btnPressed = true
  ?btn = yesBtn
    choice = true
  : // btn = noBtn
    choice = false
  
  return

func ldtF(mode)

  ?mode = "default"
    equipL triskelion
    ?!keepMask
      equipR @a.cshield1@
  :?mode = "armorRegen"
    equipL triskelion
    ?!keepMask
      equipR @a.cshield2@
  :?mode = "escape"
    equipL mind
    ?!keepMask
      equipR @a.cshield1@
  :?mode = "magnet"
    equipL star
    ?!keepMask
      equipR triskelion

  :?mode = "extend"
    equipL triskelion
    equipR mask

  :?mode = "harv"
    ?!keepMask
      equipL moon
      equipR hatchet
    :
      equipL triskelion

  :?mode = "aidPassive"
    equipL ouroboros
    ?!keepMask
      equipR triskelion
  :?mode = "aidActive"
    equipL @a.vhammer3@
    ?!keepMask
      equipR @a.vshield2@

  :?mode = "unmkDmg"
    ?p.tt % 2 = 0
      equipL triskelion
      equipR hatchet
    :
      equip @a.dUstaff@

  :?mode = "poenaStun"
    ?!keepMask
      equipL Speedy Hammer
      equipR Bifrost
    :
      equipL Speedy Hammer

  :?mode = "magic"
    ?keepMask
      ?canDebI
        equipL @a.dIwand1@
      :?canDebP
        equipL @a.dPwand@
      :?canDebF
        equipL @a.dFwand@

    :
      ?p.tt % 2 = 0
        equipL triskelion
        equipR hatchet

      :?canDebI
        equip @a.dIstaff@
      :?canDebP
        equip @a.dPstaff@
      :?canDebF
        equip @a.dFstaff@

  :?mode = "rangedDmg"
    equip @a.rbow@

  :
    >c-10,0,#red,
    ^ERROR: ldtF() recieved incorrect mode: @mode@

  return

func fight1v1()
  p.fds = foe.debuffs.string
  p.php = hp
  p.pmhp = maxhp

  /* How to apply debuffs:
  - apply all except the ones the foe is immune to.
  Finish when:
  - all possible debuffs have been applied. */
  canDebI = (p.fds ! "chill:6" & p.f ! "immune_to_debuff_chill")
  canDebP = (p.fds ! "damage" & p.f ! "immune_to_debuff_damage")
  canDebF = (p.fds ! "dot" & p.f ! "immune_to_debuff_dot")
  
  ?canDebI | canDebP | canDebF
    ?keepMask
      ?canDebI
        equipL @a.dIsword@
      :?canDebP
        equipL @a.dPsword1@
      :?canDebF
        equipL @a.dFsword@
    :
      //Left hand:
      ?canDebP
        equipL @a.dPsword1@
      :?canDebF
        equipL @a.dFsword@
      :?canDebI
        equipL @a.dIwand1@

      //Right hand:
      ?canDebI
        equipR @a.dIsword@

  
  :?p.php ! p.pmhp
    ?keepMask
      equipL @a.dLsword@
    :
      equipL moon
      equipR @a.dLsword@

  :
    equip arm
    /*?keepMask
      equipL Bifrost
    :
      p.bs = buffs.string
      ?p.bs = "berserk"
        c.doMoondial(Bifrost, a.isword, 2)
      :
        c.doMoondial(Bifrost, a.isword, 0)*/

  return



// PROCEDURE:

var choice = false
var btnPressed = false

var yesBtn
var noBtn

var dontShowAgain = false

?!btnPressed
  ?!yesBtn
    yesBtn = uimkr.mkBtn(
    ^-5,9,null,2,null,null, // x, y, w, h, anchor, dock,
    ^"Yes","#green", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvFunc, // style, pressed,
    ^null,null,null) // down, up, sound

  ?!noBtn
    noBtn = uimkr.mkBtn(
    ^5,9,8,2,null,null, // x, y, w, h, anchor, dock,
    ^"No","red", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvFunc, // style, pressed,
    ^null,null,null) // down, up, sound


  i.showStrCtr(6,30,
  ^"Harvest trees?","#yellow",
  ^false)

:
  ?yesBtn
    yesBtn.Recycle()
    yesBtn = null
  ?noBtn
    noBtn.Recycle()
    noBtn = null


  ?!dontShowAgain
    var aux = p.tt + 3*u.sec
    ?p.tt < aux
      ?choice
        i.showStrCtr(6, 30,
        ^"Harvest trees is enabled","#green",
        ^false)
        ?keepMask
          i.showStrCtr(7, 40,
          ^"(Will start harvesting in the next run!)","#green",
          ^false)
      :
        i.showStrCtr(6, 30,
        ^"Harvest trees is disabled","#red",
        ^false)
    :
      ?!dontShowAgain
        dontShowAgain = true



/* Left hand:
--- do AAC ---
- when state = 3
--- do NOT do AAC ---
- When ask is on and equipped weapon is a +21 sword. */
?p.ils >= 3 // & !(keepMask & p.il = "sword D +21")
  equipL sword 0*
  equipL @p.il@
?p.irs >= 3 // & p.ir ! "sword D +21"
  equipR @a.cshield1@
  equipR @p.ir@


?p.lb
  p.rs = res.stone
  p.rw = res.wood
  p.rb = res.bronze

  ?p.rb >= 10

    ?p.rw >= 10
      ?p.ip ! "berserk"
        brew wood + bronze

    :?p.rs >= 10
      ?p.ip ! "lucky"
        brew stone + bronze
    :
      loc.Leave()
  :
    loc.Leave()

?keepMask
  ?p.ir ! "bardiche" &
  ^p.ir ! "quarterstaff" &
  ^p.ir ! "heavy hammer"
    equipR mask

?p.lb | p.ll
  equipL triskelion
  equipR @a.cshield1@

:?p.f ! "boss" & c.canUseAETali()
  ?keepMask
    c.useAETali("l")
  :
    equipL triskelion
    c.useAETali("r")

:?p.f = "tree_boss" & c.canUseFTali()
  ?keepMask
    c.useFTali("l")
  :
    equipL triskelion
    c.useFTali("r")

/* hide cinderwisp to avoid
getting ignition debuff reflected */
:?c.canHideFTali()
^& p.f = "poena"
^& !c.canUseBard()
  ?keepMask
    c.useFTali("l")
  :
    equipL triskelion
    c.useFTali("r")

:?c.canUsePotDmg() & keepMask
  activate potion

:?choice & harvest.distance < 5
  ldtF("harv")
  ?c.canUseHatchet() & !keepMask
    c.useHatchet()

:?pickup.distance < 15
  ldtF("magnet")
:
  p.fd = foe.distance
  p.aiE = ai.enabled

  ?c.canUseBladeDS(smiteScr)
    c.useBladeDS()

  ?c.canUseQstaff() & p.f ! "tree_boss"
  ^& p.aiE & p.ir ! "hatchet"
  ^& p.ir ! "heavy hammer"
  ^& p.ir ! "bardiche"
  ^& p.ir ! Kubikiribocho
  ^& ((!c.canBash() & !c.canDash())
  ^| (p.fd < 11 | p.fd > 15))
    c.useQstaff(a.myqstaff)

  :?((p.f = "tree_boss" | p.f = "poena") & p.fd > 22)
  ^|(p.f ! "tree_boss" & p.f ! "poena" & p.fd > 15)
    ?hp ! maxhp
      ldtF("aidPassive")
    :
      p.pa = armor
      ?14 <= p.pa & p.pa <= 29
        ldtF("default")
      :?p.pa < 14
        ldtF("armorRegen")
      :
        ldtF("extend")

  :
    ?c.canBash() & !dontDash
      c.bash(a.dLsword)
    :?c.canDash() & !dontDash
      c.dash(a.dLsword, a.dshield)

    :
      p.fc = foe.GetCount(15)

      ?p.f ! "tree_boss" & p.f ! "poena"
        ?c.canUseHamm() & keepMask &
        ^p.fc >= 5 & !c.canUseBlade()
          c.useHamm(a.myHamm)
        :?p.fc = 1 | (p.f = "immune_to_ranged" & keepMask)
          ?p.tt % 2 = 0 & ai.walking
            equipL triskelion
            equipR hatchet
          :
            fight1v1()
        :
          p.fds = foe.debuffs.string
          canDebI = (p.fds ! "chill:6" & p.f ! "immune_to_debuff_chill")
          canDebP = (p.fds ! "damage" & p.f ! "immune_to_debuff_damage")
          canDebF = (p.fds ! "dot" & p.f ! "immune_to_debuff_dot")

          ?canDebI | canDebP | canDebF
            ldtF("magic")
          :
            ldtF("unmkDmg")

      :
        ?p.ls > 5 & c.canUsePotDmg()
          activate potion

        :?p.f = "phase1" // Xyloalgia
        ^& foe.state ! 4

          ?foe.hp > a.armDmg * 2
            fight1v1()
          :
            dontDash = true
            ?c.canUseMind()
              ldtF("escape")
            :
              ?p.irs = 3
                debCount++

              ?debCount < 1
                equipL @a.dPwand@
                equipR @a.dFwand@
              :?debCount < 7
                equip @a.dIstaff@

              :
                dontDash = false
                ?p.fd > 15 & c.canUseQstaff()
                  c.useQstaff(a.myqstaff)
                :?c.canBash()
                  c.bash(a.dLsword)
                :?c.canDash()
                  c.dash(a.dLsword, a.dshield)
                :
                  fight1v1()


        : // Poena
          dontDash = false
          p.bs = buffs.string

          ?p.fd > 15 & c.canUseQstaff()
            c.useQstaff(a.myqstaff)
          :?c.canBash()
            c.bash(a.dLsword)
          :?c.canDash()
            c.dash(a.dLsword, a.dshield)

          :?p.fd <= 9
            ?c.canUseMask()
              c.useMask()
            :?c.canUseBard() & p.fd <= 9
              c.useBard(Kubikiribocho)

            :
              var smiteBuffs
              smiteBuffs = i.getBuffInfo("smite", false, 2)

              ?smiteBuffs >= 25
                equip arm

              :
                ?c.canUseBard() & p.fhp <= a.bardRDmg
                  c.useBard(Kubikiribocho)

                :?c.canUseHamm() &
                ^p.fhp <= a.hammDmg +
                ^(a.smiteMult * smiteBuffs)
                  c.useHamm(a.myHamm)
                :
                  ldtF("poenaStun")



// *******************************************************
//                 END OF "2-Deadwood.txt"                
// *******************************************************
