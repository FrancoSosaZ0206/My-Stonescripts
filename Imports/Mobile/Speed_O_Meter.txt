// VARIABLES:

// Times in seconds:
var ttDigital = myFormatDigital(tt)
var pb = myFormatDigital(lbt)
var avg = myFormatDigital(lavg)

// Times in seconds and frames:
var ttSpeedrun = formatSpeedrun(tt)
var pbSpeedrun = formatSpeedrun(lbt)
var avgSpeedrun = formatSpeedrun(lavg)


// Variable updating frequency:
?tt % 30 = 0
  ttDigital = myFormatDigital(tt)
ttSpeedrun = formatSpeedrun(tt)

?loc.loop
  pb = myFormatDigital(lbt)
  avg = myFormatDigital(lavg)

  pbSpeedrun = formatSpeedrun(lbt)
  avgSpeedrun = formatSpeedrun(lavg)



// PUBLIC FUNCTIONS

func speedOmeterUpdate(isSpeedrun)
  ?isSpeedrun
    return true
  :
    return loc.begin | loc.loop | (tt % 30 = 0)

func speedOmeterToStr(isSlim, isSpeedrun)

  ?isSlim
    ?isSpeedrun
      return
      ^"☆#" + pbSpeedrun +     // ☆ = PB
      ^"#|#≈#" + avgSpeedrun + // ≈ = AVG
      ^"#|#▶#" + ttSpeedrun    // ▶ = CURR

    :
      return
      ^"☆#" + pb +         // ☆ = PB
      ^"#|#≈#" + avg +      // ≈ = AVG
      ^"#|#▶#" + ttDigital // ▶ = CURR

  :
    ?isSpeedrun
      return
      ^"####SPEED-O-METER" + "\n" +
      ^"·····················" + "\n" +
      ^" PB##" + pbSpeedrun + "#(" + lbt + "f)" + "\n" +
      ^" AVG#" + avgSpeedrun + "#(" + lavg + "f)" + "\n" +
      ^" CUR#" + ttSpeedrun + "#(" + tt + "f)"

    :
      return
      ^"SPEED-O-METER" + "\n" +
      ^"·············" + "\n" +
      ^"##PB  " + pb + "\n" +
      ^"##AVG " + avg + "\n" +
      ^"##CUR " + ttDigital

func printSpeedOmeter(x, y, col, isSlim, isSpeedrun)

  >`@x@,@y@,@col@,@speedOmeterToStr(isSlim, isSpeedrun)@

  return

func asciiPrintSpeedOmeter(x, y, col, isSlim, isSpeedrun)

  >`@x@,@y@,@col@,ascii
@replaceInStr(speedOmeterToStr(isSlim, isSpeedrun), " ", "#")@
asciiend

  return

func speedOmeterUI(x, y, col, isSlim, isSpeedrun)

  var txt
  var panel

  // For the panel:
  var pnlAnchor
  var pnlDock
  var style
  
  ?isSlim
    pnlAnchor = top_center
    pnlDock = top_center
    style = -1
  :
    pnlAnchor = top_left
    pnlDock = top_left
    style = -2

  txt = mkTxtbox(
    ^1, 1, null, null, // x, y, w, h,
    ^top_left, top_left, // pnlAnchor, dock,
    ^speedOmeterToStr(isSlim, isSpeedrun), // txt
    ^null, col) // align, col

  panel = mkPanel(
    ^x, y, txt.w + 2, txt.h + 2, // x, y, w, h,
    ^pnlAnchor, pnlDock, // anchor, dock,
    ^col, style, txt) // col, style, child

  return panel



