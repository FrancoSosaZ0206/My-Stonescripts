// *******************************************************
//                    performanceV2.txt                   
// *******************************************************


/* FILE INFO
  Performance library (version 2)
  Made by MetalEagle26 (Tom Crow)

This library provides some custom
variables to help improve the
performance of your scripts
and reduce lag!

- How to use:
  var p
  p = import MyScripts/Imports/PC/PerformanceV2

- Use the variables that you need like this:
  ?p.bardDelay // example */


// IMPORTS

var u = import MyScripts/Imports/PC/Utilities



// VARIABLES - definitions


//Location
var l = loc
var ls = loc.stars
var lavg = loc.averageTime
var lbt = loc.bestTime
var lb = loc.begin
var ll = loc.loop

// Foe
var f
f = foe
var fn
var fbs
var fds
var fd
var fc
var fs
var ft
var fhp
fhp = foe.hp
var fa
fa = foe.armor
var fdmg

// Time
var tt
tt = totaltime

// Item
var ip
ip = item.potion
var il
il = item.left
var ils
ils = item.left.state
var ilt
var ili

var ir
ir = item.right
var irs
irs = item.right.state
var irt
var iri

// Player stats
var php
var pmhp
var pa
var pma
var ds
var bs

// Ai
var aiE
var aiI
aiI = ai.idle

//screen
var si
si = screen.i

//resources
var rs // res.stone
var rw // res.wood
var rt // res.tar
var rb // res.bronze
var rk // res.ki
var rc // res.crystals

// Functions
var canAct
canAct = item.CanActivate()

// Cooldowns
var bladeCd = 80 * u.sec
var maskCd = 48 * u.sec
var armCd = 39 * u.sec
var fTaliCd = 5 * sec
var aeTaliCd = 5 * sec
var cindCd = 90 * sec
var weavCd = 90 * sec

var bardCd = 30 * u.sec
var hammCd = 22 * u.sec
// var mindCd = 12 * u.sec // currently not in use
var qstaffCd = 5 * u.sec + 15 // 5,5s
var dashCd = u.sec + 15 // 1,5s
var bashCd = 9 * u.sec

// Cast times
var castTime = u.sec

// Delays
var bladeDelay = 0
var maskDelay = 0
var armDelay = 0
var fTaliDelay = 0
var aeTaliDelay = 0
var cindDelay = 0
var weavDelay = 0

var bardDelay = 0
var hammDelay = 0
// var mindDelay = 0 // currently not in use
var qstaffDelay = 0
var dashDelay = 0
var bashDelay = 0

?tt < 3
  lb = loc.begin
  ll = loc.loop

?tt = 1
  lavg = loc.averageTime
  lbt = loc.bestTime

  bladeDelay = 0
  maskDelay = 0
  armDelay = 0
  fTaliDelay = 0
  aeTaliDelay = 0
  cindDelay = 0
  weavDelay = 0

  bardDelay = 0
  hammDelay = 0
  // mindDelay = 0 // currently not in use
  qstaffDelay = 0
  dashDelay = 0
  bashDelay = 0



// *******************************************************
//               END OF "performanceV2.txt"               
// *******************************************************