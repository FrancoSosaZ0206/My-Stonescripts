// *******************************************************
//                     2-Deadwood.txt                     
// *******************************************************


// Script for Deadwood Canyon


// IMPORTS

var u = import MyScripts/Imports/PC/Utilities
var uimkr = import MyScripts/Imports/PC/UI_Maker
var p
p = import MyScripts/Imports/PC/PerformanceV2
var a = import MyScripts/Imports/PC/MyArsenal
var i
i = import MyScripts/Imports/PC/MyBetterInfo
var c = import MyScripts/Imports/PC/Combat

var som
som = import MyScripts/Imports/PC/Speed_O_Meter
var dpsm
dpsm = import MyScripts/Imports/PC/DPS_Meter_MODIFIED



// VARIABLES

var keepMask = true
var smiteScr = 1

?p.ll
  keepMask = false

var canDebI
var canDebP
var canDebF



// FUNCTIONS:

func harvFunc(btn)
  btnPressed = true
  ?btn = yesBtn
    choice = true
  : // btn = noBtn
    choice = false
  
  return

func ldtF(mode)

  ?mode = "default"
    equipL triskelion
    ?!keepMask
      equipR @a.cshield1@
  :?mode = "armorRegen"
    equipL triskelion
    ?!keepMask
      equipR @a.cshield2@
  :?mode = "escape"
    equipL mind
    ?!keepMask
      equipR @a.cshield1@
  :?mode = "magnet"
    equipL star
    ?!keepMask
      equipR triskelion

  :?mode = "harv"
    ?!keepMask
      equipL moon
      equipR hatchet
    :
      equipL triskelion

  :?mode = "aidPassive"
    equipL ouroboros
    ?!keepMask
      equipR triskelion
  :?mode = "aidActive"
    equipL @a.vhammer3@
    ?!keepMask
      equipR @a.vshield2@

  :?mode = "unmkDmg"
    ?keepMask & p.fc > 1
      equipL @a.dUSWORD2@
    :
      equipL @a.dUsword1@
    ?!keepMask
      equipR @a.dUSWORD2@

  :?mode = "poenaStun"
    ?!keepMask
      equipL Speedy Hammer
      equipR Vantum Phoenix
    :
      equipL Speedy Hammer

  :?mode = "magic"
    ?keepMask
      ?canDebI
        equipL @a.dIwand1@
      :?canDebP
        equipL @a.dPwand@
      :?canDebF
        equipL @a.dFwand@
    :
      //Left hand:
      ?canDebP
        equipL @a.dPwand@
      :?canDebF
        equipL @a.dPwand@
      :?canDebI
        equipL @a.dIwand2@
      
      //Right hand:
      ?canDebI
        equipR @a.dIwand1@

  :?mode = "rangedDmg"
    equip @a.rbow@

  :
    >c-10,0,#red,
    ^ERROR: ldtF() recieved incorrect mode: @mode@

  return

func fight1v1()
  p.fds = foe.debuffs.string

  /* How to apply debuffs:
  - apply all except the ones the foe is immune to.
  Finish when:
  - all possible debuffs have been applied. */
  canDebI = (p.fds ! "chill:6" & p.f ! "immune_to_debuff_chill")
  
  canDebP = (p.fds ! "damage" & p.f ! "immune_to_debuff_damage")
  
  canDebF = (p.fds ! "dot" & p.f ! "immune_to_debuff_dot")
  
  ?canDebI | canDebP | canDebF
    ?keepMask
      ?canDebI
        equipL @a.dIsword@
      :?canDebP
        equipL @a.dPsword1@
      :?canDebF
        equipL @a.dFsword@
    :
      //Left hand:
      ?canDebP
        equipL @a.dPsword1@
      :?canDebF
        equipL @a.dFsword@
      :?canDebI
        equipL @a.dIwand1@

      //Right hand:
      ?canDebI
        equipR @a.dIsword@
  :
    ?keepMask
      equipL Vantum Phoenix
    :
      p.bs = buffs.string
      ?p.bs = "berserk"
        c.doMoondial(Vantum Phoenix, a.fsword, 2)
      :
        c.doMoondial(Vantum Phoenix, a.fsword, 0)

  return



// PROCEDURE:


var somui = som.speedOmeterUI(0, 1, i.colToHex("pink"), true, false)
?som.speedOmeterUpdate(false)
  somui.Recycle()
  somui = null

  somui = som.speedOmeterUI(0, 1, i.colToHex("pink"), true, false)


dpsm.DPSMeterEnabled = false
var dpsPanel
?dpsm.dpsMeterUpdate(2)
  ?dpsPanel
    dpsPanel.Recycle()
    dpsPanel = null

  dpsPanel = dpsm.uiDPSMeter(0, 4, "#yellow", 2)


var choice = false
var btnPressed = false

var yesBtn
var noBtn

var dontShowAgain = false


?!btnPressed
  ?!yesBtn
    yesBtn = uimkr.mkBtn(
    ^-5,9,null,2,null,null, // x, y, w, h, anchor, dock,
    ^"Yes","#green", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvFunc, // style, pressed,
    ^null,null,null) // down, up, sound

  ?!noBtn
    noBtn = uimkr.mkBtn(
    ^5,9,8,2,null,null, // x, y, w, h, anchor, dock,
    ^"No","red", // txt, col,
    ^null,null,null, // tcol, bcol, hcol,
    ^-5,harvFunc, // style, pressed,
    ^null,null,null) // down, up, sound


  i.showStrCtr(6,30,
  ^"Harvest boulders?","#yellow",
  ^false)

:
  ?yesBtn
    yesBtn.Recycle()
    yesBtn = null
  ?noBtn
    noBtn.Recycle()
    noBtn = null


  ?!dontShowAgain
    var aux = p.tt + 3*u.sec
    ?p.tt < aux
      ?choice
        i.showStrCtr(6, 30,
        ^"Harvest trees is enabled","#green",
        ^false)
        ?keepMask
          i.showStrCtr(7, 40,
          ^"(Will start harvesting in the next run!)","#green",
          ^false)
      :
        i.showStrCtr(6, 30,
        ^"Harvest trees is disabled","#red",
        ^false)
    :
      ?!dontShowAgain
        dontShowAgain = true



?p.ils = 3
  equipL wand 0*
  equipL @p.il@
?p.irs = 3
  equipR @a.cshield1@
  equipR @p.ir@


?p.lb
  p.rs = res.stone
  p.rw = res.wood
  p.rb = res.bronze

  ?p.rb >= 10

    ?p.rw >= 10
      ?p.ip ! "berserk"
        brew wood + bronze

    :?p.rs >= 10
      ?p.ip ! "lucky"
        brew stone + bronze
    :
      loc.Leave()
  :
    loc.Leave()

?keepMask
  equipR mask

?p.lb | p.ll
  equipL triskelion
  equipR @a.cshield1@

:?p.f ! "boss" & c.canUseAETali()
  ?keepMask
    c.useAETali("l")
  :
    equipL triskelion
    c.useAETali("r")

:?p.f = "tree_boss" & c.canUseFTali()
  ?keepMask
    c.useFTali("l")
  :
    equipL triskelion
    c.useFTali("r")

:?c.canUsePotDmg() & keepMask
  activate potion

:?choice & harvest.distance < 5
  ldtF("harv")
  ?c.canUseHatchet() & !keepMask
    c.useHatchet()

:?pickup.distance < 15
  ldtF("magnet")
:
  p.fd = foe.distance
  p.aiE = ai.enabled

  ?c.canUseQstaff()
    ?p.aiE & p.ir ! "hatchet"
    ^& p.ir ! "heavy hammer"
    ^& p.ir ! "bardiche"
    ^& p.ir ! Kubikiribocho
    ^& ((!c.canBash() & !c.canDash())
    ^| (p.fd < 11 | p.fd > 15))
      c.useQstaff(a.myqstaff)

  ?c.canUseBladeDS(smiteScr)
    c.useBladeDS()

  ?(p.f ! "tree_boss" & p.f ! "poena" & p.fd > 22)
  ^|(p.fd > 15)
    ?hp ! maxhp
      ldtF("aidPassive")
    :
      p.pa = armor
      ?14 <= p.pa & p.pa <= 29
        ldtF("default")
      :?p.pa < 14
        ldtF("armorRegen")
      :
        equipL triskelion
        equipR mask

  :
    ?c.canBash()
      c.bash(a.dLsword)
    :?c.canDash()
      c.dash(a.dLsword,a.dshield)

    :
      p.fc = foe.count

      ?p.f = "wasp" | p.f = "wasp_nest"
        ?c.canUseWeav()
          c.useWeav()

      :?p.f ! "tree_boss" & p.f ! "poena"
        ?p.fc >= 5 & !c.canUseBlade()
        ^& c.canUseHamm()
          c.useHamm()
        :
          fight1v1()


      : // ?foe = "tree_boss" | foe = "poena"
        ?p.ls > 5 & c.canUsePotDmg()
          activate potion

        :
          ?p.f = "phase1" // = "Xyloalgia"
            ?c.canUseMask()
              c.useMask()
            :
              fight1v1()

          : // foe = "phase2" (poena)

            /* hide cinderwisp to avoid
            getting ignition debuff reflected */
            ?c.canHideFTali()
              c.useFTali("l")
            :
              p.fhp = foe.hp
              p.bs = buffs.string

              ?c.canUseBard() & p.fhp <= a.bardRDmg
                c.useBard(Kubikiribocho)

              :?c.canUseHamm() &
              ^p.fhp <= a.hammDmg +
              ^(a.smiteMult * i.getBuffInfo("smite", false, 2))
                c.useHamm()
              :
                ldtF("poenaStun")



// *******************************************************
//                 END OF "2-Deadwood.txt"                
// *******************************************************
